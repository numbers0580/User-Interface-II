/* Add CSS styling here */

/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}

* {
    box-sizing:border-box;
}

/*Project-specific Styling starts here*/
@import url('https://fonts.googleapis.com/css?family=Cabin');

@keyframes Animator {
    0% {background-color: #BB0000;}
    33% {background-color: #FF8000;}
    67% {background-color: #BBBB00;}
    100% {background-color: #BB0000;}
}

body {
    font-family: 'Cabin', sans-serif;
    background-color: black;
    width: 100%;
    /*
        Flex Container
        the "display: flex;" below specifies that the
        <body> itself will be a flex container. The
        flex items are only the direct childs of this
        container. Here, I only made one child, a div
        with the class "viewablePage"
    */
    display: flex;
    /*
        Flex Container Properties
        Flex containers come with some default properties,
        but I wanted to change the way the body positioned
        the <div> it contained using "justify-content: center;"
    */
    justify-content: center;
}

.viewablePage {
    width: 1000px;
    background-image: linear-gradient(to top right, #404040, #E8E8E8);
}

header {
    width: 100%;
    /*
        Box Model: Padding
        The padding creates a buffer area inside the container
        (in this case, the <header>)
        This prevents elements within that container from touching
        specified edges (top, right, bottom, left -- in that order)
    */
    padding: 5%;
    background-image: url('https://lh3.googleusercontent.com/proxy/Owk8a_7mCByMKe1s-28cLuWJzuqK0_7mhxpXCe_4Uh6DYH9HlQDLwTeFCb27q54M_LN1H0SqmPTJcjoCgVaK_GM5oO9N2FzzORLulZczSK4rGpxS7c1tVkM0');
    background-size: cover;
}

button {
    cursor: pointer;
}

h1 {
    font-size: 36px;
    font-weight: bold;
    color: #FFD700;
    padding: 0.5%;
}

h2 {
    font-size: 30px;
    font-weight: bold;
    padding: 0.5%;
}

h3 {
    font-size: 24px;
    font-weight: bold;
    color: #C0C0C0;
    padding: 0.5%;
}

.tablinks {
    width: 100px;
    height: 30px;
    border-radius: 10px;
    font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;
    font-size: 16px;
}

.tablinks:hover {
    animation-name: Animator;
    animation-duration: 3s;
    animation-iteration-count: infinite;
}

.nameSection {
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    padding: 20px;
}

.nameSection div {
    text-align: center;
    width: 45%;
}

.nameSection img {
    /*
        Box Model: Border
        The border of a container is the area between any margins
        outside of the container and the padding inside the
        container. In this case, the container is the image in
        the first section, just below the header.
    */
    border: 4px solid gold;
}

.wrapSection {
    /*
        Another Flex Container along with some customized
        properties
    */
    display: flex;
    flex-flow: row wrap;
    justify-content: space-around;
}

.wrapSection div {
    text-align: center;
    /*
        Box Model: Margin
        The margin is the area outside of the container.
        Using margin can horizontally and/or vertically shift
        the container (the <div> in this case) from the edges
        of the parent container (.wrapSection in this case)
    */
    margin: 10px 0;
}

.wrapSection img {
    /*
        Box Model: Content
        After specifying any values for margins, borders, and
        padding, the carefully-positioned item that displays
        is the content itself. However, it too can be adjusted.
        In the case below, the content is the series of images
        all being adjusted to sizes of 170px * 170px
    */
    width: 220px;
    height: 220px;
}

.iconSection {
    display: flex;
    justify-content: center;
    padding: 10%;
}

.iconSection div {
    display: flex;
    width: 60%;
    justify-content: space-between;
}

.iconSection img {
    width: 60px;
    height: 60px;
}

footer {
    text-align: center;
    background-image: url('https://png.pngtree.com/thumb_back/fw800/background/20190826/pngtree-abstract-metallic-blue-black-frame-layout-modern-tech-design-template-image_305020.jpg');
    background-size: cover;
    padding: 5%;
}